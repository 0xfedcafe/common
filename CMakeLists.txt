# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Options
option(COMMON_BUILD_TESTS "" OFF)

project(common
	LANGUAGES
		CXX
)

include(FetchContent)

# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
if(POLICY CMP0135)
	cmake_policy(SET CMP0135 NEW)
endif()
if(COMMON_BUILD_TESTS) # common-build-tests
	message(STATUS "Fetching GTest (v1.14.0)...")
	FetchContent_Declare(GTest SYSTEM
		GIT_REPOSITORY
			"https://github.com/google/googletest"
		GIT_TAG
			v1.14.0
	)
	FetchContent_MakeAvailable(GTest)

endif()
# Target: common
add_library(common INTERFACE)

add_library(es3n1n::common ALIAS common)
target_compile_definitions(common INTERFACE
	NOMINMAX
)

target_compile_features(common INTERFACE
	cxx_std_23
)

target_include_directories(common INTERFACE
	"src/lib/"
)

# Target: common-tests
if(COMMON_BUILD_TESTS) # common-build-tests
	set(common-tests_SOURCES
		"src/tests/defers.cpp"
		"src/tests/files.cpp"
		"src/tests/logger.cpp"
		"src/tests/memory/address.cpp"
		"src/tests/platform.cpp"
		"src/tests/progress.cpp"
		"src/tests/random.cpp"
		"src/tests/string_parser.cpp"
		"src/tests/types.cpp"
		cmake.toml
	)

	add_executable(common-tests)

	target_sources(common-tests PRIVATE ${common-tests_SOURCES})
	source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${common-tests_SOURCES})

	if(UNIX) # unix
		target_compile_options(common-tests PRIVATE
			-stdlib=libc++
		)
	endif()

	if(MSVC) # msvc
		target_compile_options(common-tests PRIVATE
			"/MP"
		)
	endif()

	target_include_directories(common-tests PRIVATE
		"src/tests/"
	)

	target_link_libraries(common-tests PRIVATE
		es3n1n::common
		GTest::gtest_main
	)

	if(UNIX) # unix
		target_link_options(common-tests PRIVATE
			-lc++
			-lc++abi
			-fuse-ld=lld
		)
	endif()

	get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
	if(NOT CMKR_VS_STARTUP_PROJECT)
		set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT common-tests)
	endif()

endif()
